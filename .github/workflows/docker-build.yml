name: Docker Build

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    env:
      REGISTRY: docker.io
      OPERATOR_SDK_VERSION: 1.39.0
      PLATFORMS: linux/amd64
      IMAGE_NAME: metadata-injector-operator

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Extract version from tag
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}" >> $GITHUB_ENV

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull latest for cache
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:latest || true
          docker pull ${{ env.DOCKER_IMAGE }}:v${{ env.VERSION }} || true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=${{ env.DOCKER_IMAGE }}:latest
            type=registry,ref=${{ env.DOCKER_IMAGE }}:v${{ env.VERSION }}
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false
          sbom: false

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Print image digest
        run: |
          echo "Images built and pushed:"
          echo "${{ steps.meta.outputs.tags }}" | tr '\n' '\n'
